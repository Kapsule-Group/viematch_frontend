{"ast":null,"code":"import * as types from './constants.jsx';\nexport function getStock(marker, page, quantity) {\n  return {\n    type: types.GET_STOCK,\n    payload: {\n      client: 'default',\n      request: {\n        url: \"/inventory/?\".concat(quantity ? 'ordering=' + quantity + '&' : '').concat(page ? 'page=' + page + '&' : '', \"stock=\").concat(marker),\n        method: \"GET\"\n      }\n    }\n  };\n} //\n// export function switcher(marker, quantity) {\n//     return {\n//         type: types.SWITCHER,\n//         payload: {\n//             client: 'default',\n//             request: {\n//                 url: `/inventory/?stock=${marker}&ordering=${quantity}`,\n//                 method: \"GET\",\n//             }\n//         }\n//     };\n// }\n\nexport function getSearchList(id) {\n  return {\n    type: types.GET_STOCK,\n    payload: {\n      client: 'default',\n      request: {\n        url: \"/inventory/?id__in=\".concat(id),\n        method: \"GET\"\n      }\n    }\n  };\n}\nexport function searchStock(marker, prod) {\n  return {\n    type: types.SEARCH_STOCK,\n    payload: {\n      client: 'default',\n      request: {\n        url: \"/inventory-search/?stock=\".concat(marker).concat(prod && prod.length !== 0 ? \"&search=\".concat(prod) : ''),\n        method: \"GET\"\n      }\n    }\n  };\n}\nexport function patchQuantity(id, data) {\n  return {\n    type: types.PATCH_QUANTITY,\n    payload: {\n      client: 'default',\n      request: {\n        url: \"/quantity-update/\".concat(id, \"/\"),\n        method: \"PATCH\",\n        data: data\n      }\n    }\n  };\n}\nexport function postRequest(data) {\n  return {\n    type: types.POST_REQUEST,\n    payload: {\n      client: 'default',\n      request: {\n        url: \"/requests/\",\n        method: \"POST\",\n        data: data\n      }\n    }\n  };\n}","map":{"version":3,"sources":["/home/mydev/viebeg/backend/viebeg_backend2/4Com-viebeg-frontend-2089674220ab-2/src/actions/stockActions.jsx"],"names":["types","getStock","marker","page","quantity","type","GET_STOCK","payload","client","request","url","method","getSearchList","id","searchStock","prod","SEARCH_STOCK","length","patchQuantity","data","PATCH_QUANTITY","postRequest","POST_REQUEST"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,iBAAvB;AAGA,OAAO,SAASC,QAAT,CAAkBC,MAAlB,EAA0BC,IAA1B,EAAgCC,QAAhC,EAA0C;AAC7C,SAAO;AACHC,IAAAA,IAAI,EAAEL,KAAK,CAACM,SADT;AAEHC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,SADH;AAELC,MAAAA,OAAO,EAAE;AACLC,QAAAA,GAAG,wBAAiBN,QAAQ,GAAG,cAAYA,QAAZ,GAAqB,GAAxB,GAA8B,EAAvD,SAA4DD,IAAI,GAAG,UAAUA,IAAV,GAAiB,GAApB,GAA0B,EAA1F,mBAAqGD,MAArG,CADE;AAELS,QAAAA,MAAM,EAAE;AAFH;AAFJ;AAFN,GAAP;AAUH,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,aAAT,CAAuBC,EAAvB,EAA2B;AAC9B,SAAO;AACHR,IAAAA,IAAI,EAAEL,KAAK,CAACM,SADT;AAEHC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,SADH;AAELC,MAAAA,OAAO,EAAE;AACLC,QAAAA,GAAG,+BAAwBG,EAAxB,CADE;AAELF,QAAAA,MAAM,EAAE;AAFH;AAFJ;AAFN,GAAP;AAUH;AAED,OAAO,SAASG,WAAT,CAAqBZ,MAArB,EAA6Ba,IAA7B,EAAmC;AACtC,SAAO;AACHV,IAAAA,IAAI,EAAEL,KAAK,CAACgB,YADT;AAEHT,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,SADH;AAELC,MAAAA,OAAO,EAAE;AACLC,QAAAA,GAAG,qCAA8BR,MAA9B,SAAuCa,IAAI,IAAIA,IAAI,CAACE,MAAL,KAAgB,CAAxB,qBAAuCF,IAAvC,IAAgD,EAAvF,CADE;AAELJ,QAAAA,MAAM,EAAE;AAFH;AAFJ;AAFN,GAAP;AAUH;AAED,OAAO,SAASO,aAAT,CAAuBL,EAAvB,EAA2BM,IAA3B,EAAiC;AACpC,SAAO;AACHd,IAAAA,IAAI,EAAEL,KAAK,CAACoB,cADT;AAEHb,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,SADH;AAELC,MAAAA,OAAO,EAAE;AACLC,QAAAA,GAAG,6BAAsBG,EAAtB,MADE;AAELF,QAAAA,MAAM,EAAE,OAFH;AAGLQ,QAAAA,IAAI,EAAJA;AAHK;AAFJ;AAFN,GAAP;AAWH;AAED,OAAO,SAASE,WAAT,CAAqBF,IAArB,EAA2B;AAC9B,SAAO;AACHd,IAAAA,IAAI,EAAEL,KAAK,CAACsB,YADT;AAEHf,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,SADH;AAELC,MAAAA,OAAO,EAAE;AACLC,QAAAA,GAAG,cADE;AAELC,QAAAA,MAAM,EAAE,MAFH;AAGLQ,QAAAA,IAAI,EAAJA;AAHK;AAFJ;AAFN,GAAP;AAWH","sourcesContent":["import * as types from './constants.jsx';\n\n\nexport function getStock(marker, page, quantity) {\n    return {\n        type: types.GET_STOCK,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/inventory/?${quantity ? 'ordering='+quantity+'&' : ''}${page ? 'page=' + page + '&' : ''}stock=${marker}`,\n                method: \"GET\",\n            }\n        }\n    };\n}\n//\n// export function switcher(marker, quantity) {\n//     return {\n//         type: types.SWITCHER,\n//         payload: {\n//             client: 'default',\n//             request: {\n//                 url: `/inventory/?stock=${marker}&ordering=${quantity}`,\n//                 method: \"GET\",\n//             }\n//         }\n//     };\n// }\n\nexport function getSearchList(id) {\n    return {\n        type: types.GET_STOCK,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/inventory/?id__in=${id}`,\n                method: \"GET\",\n            }\n        }\n    };\n}\n\nexport function searchStock(marker, prod) {\n    return {\n        type: types.SEARCH_STOCK,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/inventory-search/?stock=${marker}${prod && prod.length !== 0 ? `&search=${prod}` : ''}`,\n                method: \"GET\",\n            }\n        }\n    };\n}\n\nexport function patchQuantity(id, data) {\n    return {\n        type: types.PATCH_QUANTITY,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/quantity-update/${id}/`,\n                method: \"PATCH\",\n                data\n            }\n        }\n    };\n}\n\nexport function postRequest(data) {\n    return {\n        type: types.POST_REQUEST,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/requests/`,\n                method: \"POST\",\n                data\n            }\n        }\n    };\n}"]},"metadata":{},"sourceType":"module"}