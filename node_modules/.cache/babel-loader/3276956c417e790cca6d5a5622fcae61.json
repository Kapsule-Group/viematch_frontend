{"ast":null,"code":"var _jsxFileName = \"/home/mydev/viebeg/backend/viebeg_backend2/4Com-viebeg-frontend-2089674220ab-2/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware, ConnectedRouter } from 'connected-react-router';\nimport { multiClientMiddleware } from 'redux-axios-middleware';\nimport api from \"./actions/api\";\nimport routes from './routes/routes';\nimport rootReducer from './reducers';\nvar axiosMiddlewareOptions = {\n  interceptors: {\n    request: [function (action, config) {\n      if (localStorage.token || localStorage.token_res) {\n        var token = localStorage.token ? localStorage.token : localStorage.token_res;\n        config.headers['Authorization'] = 'Token ' + token;\n      }\n\n      return config;\n    }]\n  }\n};\nvar history = createBrowserHistory();\nvar appRouterMiddleware = routerMiddleware(history);\nvar createStoreWithMiddleware = applyMiddleware(multiClientMiddleware(api, axiosMiddlewareOptions), appRouterMiddleware)(createStore);\nvar store = createStoreWithMiddleware(rootReducer(history), {}, window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n  return f;\n});\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(ConnectedRouter, {\n  history: history,\n  children: routes,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }\n})), document.getElementById('wrapper'));","map":{"version":3,"sources":["/home/mydev/viebeg/backend/viebeg_backend2/4Com-viebeg-frontend-2089674220ab-2/src/index.js"],"names":["React","ReactDOM","Provider","createStore","applyMiddleware","createBrowserHistory","routerMiddleware","ConnectedRouter","multiClientMiddleware","api","routes","rootReducer","axiosMiddlewareOptions","interceptors","request","action","config","localStorage","token","token_res","headers","history","appRouterMiddleware","createStoreWithMiddleware","store","window","__REDUX_DEVTOOLS_EXTENSION__","f","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,gBAAT,EAA2BC,eAA3B,QAAkD,wBAAlD;AACA,SAASC,qBAAT,QAAsC,wBAAtC;AAEA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,IAAMC,sBAAsB,GAAG;AAC3BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,OAAO,EAAE,CACL,UAACC,MAAD,EAASC,MAAT,EAAoB;AAChB,UAAIC,YAAY,CAACC,KAAb,IAAsBD,YAAY,CAACE,SAAvC,EAAkD;AAC9C,YAAID,KAAK,GAAGD,YAAY,CAACC,KAAb,GAAqBD,YAAY,CAACC,KAAlC,GAA0CD,YAAY,CAACE,SAAnE;AACAH,QAAAA,MAAM,CAACI,OAAP,CAAe,eAAf,IAAkC,WAAWF,KAA7C;AACH;;AACD,aAAOF,MAAP;AACH,KAPI;AADC;AADa,CAA/B;AAcA,IAAMK,OAAO,GAAGhB,oBAAoB,EAApC;AACA,IAAMiB,mBAAmB,GAAGhB,gBAAgB,CAACe,OAAD,CAA5C;AACA,IAAME,yBAAyB,GAAGnB,eAAe,CAACI,qBAAqB,CAACC,GAAD,EAAMG,sBAAN,CAAtB,EAAqDU,mBAArD,CAAf,CAAyFnB,WAAzF,CAAlC;AACA,IAAMqB,KAAK,GAAGD,yBAAyB,CAACZ,WAAW,CAACU,OAAD,CAAZ,EAAuB,EAAvB,EAA2BI,MAAM,CAACC,4BAAP,GAAsCD,MAAM,CAACC,4BAAP,EAAtC,GAA8E,UAAAC,CAAC;AAAA,SAAIA,CAAJ;AAAA,CAA1G,CAAvC;AAGA1B,QAAQ,CAAC2B,MAAT,eACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,eAAD;AAAiB,EAAA,OAAO,EAAEH,OAA1B;AAAmC,EAAA,QAAQ,EAAEX,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,EAIImB,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAJJ","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware, ConnectedRouter } from 'connected-react-router'\nimport { multiClientMiddleware } from 'redux-axios-middleware';\n\nimport api from \"./actions/api\";\nimport routes from './routes/routes';\nimport rootReducer from './reducers';\n\nconst axiosMiddlewareOptions = {\n    interceptors: {\n        request: [\n            (action, config) => {\n                if (localStorage.token || localStorage.token_res) {\n                    let token = localStorage.token ? localStorage.token : localStorage.token_res;\n                    config.headers['Authorization'] = 'Token ' + token\n                }\n                return config;\n            }\n        ]\n    }\n};\n\nconst history = createBrowserHistory();\nconst appRouterMiddleware = routerMiddleware(history);\nconst createStoreWithMiddleware = applyMiddleware(multiClientMiddleware(api, axiosMiddlewareOptions), appRouterMiddleware)(createStore);\nconst store = createStoreWithMiddleware(rootReducer(history), {}, window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f);\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history} children={routes}/>\n    </Provider>,\n    document.getElementById('wrapper')\n);\n\n"]},"metadata":{},"sourceType":"module"}