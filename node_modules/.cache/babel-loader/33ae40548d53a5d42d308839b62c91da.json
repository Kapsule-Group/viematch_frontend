{"ast":null,"code":"import _classCallCheck from \"/home/mydev/viebeg/backend/viebeg_backend2/4Com-viebeg-frontend-2089674220ab-2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/mydev/viebeg/backend/viebeg_backend2/4Com-viebeg-frontend-2089674220ab-2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/mydev/viebeg/backend/viebeg_backend2/4Com-viebeg-frontend-2089674220ab-2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/mydev/viebeg/backend/viebeg_backend2/4Com-viebeg-frontend-2089674220ab-2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/mydev/viebeg/backend/viebeg_backend2/4Com-viebeg-frontend-2089674220ab-2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/mydev/viebeg/backend/viebeg_backend2/4Com-viebeg-frontend-2089674220ab-2/src/components/Auth/Register/SignUp.jsx\";\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { bindActionCreators } from 'redux';\nimport RenderField from \"../../HelperComponents/RenderField/RenderField\";\nimport DefaultButton from '../../Buttons/DefaultButton/DefaultButton';\nimport { Link } from 'react-router-dom';\nimport { postRegisterFirstStep } from '../../../actions/authActions';\nimport { resetErrorUsers } from '../../../actions/UserActions'; // import recaptcha from \"react-google-recaptcha/src/recaptcha\";\n\nvar SITE_KEY = \"6LfWmNQUAAAAAHjBqN29AftN2ntLZ5858Yi6M085\";\nvar recaptchaRef = React.createRef();\n\nvar SignUp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SignUp, _Component);\n\n  function SignUp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SignUp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SignUp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      reCaptcha: false,\n      loading: false\n    };\n\n    _this.submitForm = function (data) {\n      // const recaptchaValue = recaptchaRef.current.getValue();\n      var _this$props = _this.props,\n          postRegisterFirstStep = _this$props.postRegisterFirstStep,\n          history = _this$props.history,\n          resetErrorUsers = _this$props.resetErrorUsers;\n\n      _this.setState({\n        loading: true\n      });\n\n      data.recaptcha = _this.state.recaptchaKey;\n      postRegisterFirstStep(data).then(function (res) {\n        if (res.payload && res.payload.status && res.payload.status === 200) {\n          localStorage.setItem('clinic_info', JSON.stringify(data));\n          history.push(\"/auth/sign-up/second-step\");\n          resetErrorUsers();\n        } else {\n          _this.setState({\n            loading: false,\n            reCaptcha: false\n          });\n\n          recaptchaRef.current.reset();\n        }\n      });\n    };\n\n    _this.onChange = function (key) {\n      _this.setState({\n        reCaptcha: true,\n        recaptchaKey: key\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SignUp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var resetErrorUsers = this.props.resetErrorUsers; // resetErrorUsers()\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          handleSubmit = _this$props2.handleSubmit,\n          submitting = _this$props2.submitting,\n          pristine = _this$props2.pristine,\n          valid = _this$props2.valid,\n          step_fail = _this$props2.step_fail,\n          resetErrorUsers = _this$props2.resetErrorUsers;\n      var _this$state = this.state,\n          reCaptcha = _this$state.reCaptcha,\n          loading = _this$state.loading;\n      console.log(step_fail);\n      return React.createElement(\"form\", {\n        onSubmit: handleSubmit(this.submitForm),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"auth-block_head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Sign up to VIEBEG\"), React.createElement(\"h3\", {\n        className: \"auth-block_descriptions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Please, fill out the form about your business below\"), React.createElement(\"div\", {\n        className: \"block_field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Field, {\n        name: \"clinic_email\",\n        type: \"text\",\n        component: RenderField,\n        placeholder: \"Type here\\u2026\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"back_error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, !!step_fail && step_fail.clinic_email)), React.createElement(\"div\", {\n        className: \"block_custom_field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"block_field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Hospital name\"), React.createElement(Field, {\n        name: \"clinic_name\",\n        type: \"text\",\n        component: RenderField,\n        placeholder: \"Type here\\u2026\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"back_error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, !!step_fail && step_fail.clinic_name)), React.createElement(\"div\", {\n        className: \"captcha_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(ReCAPTCHA, {\n        theme: \"light\",\n        ref: recaptchaRef,\n        sitekey: SITE_KEY,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"back_error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, !!step_fail && step_fail.recaptcha))), React.createElement(\"div\", {\n        className: \"auth_btn_wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(DefaultButton, {\n        variant: \"contained\",\n        disabled: reCaptcha ? submitting || pristine || !valid : true,\n        loading: loading,\n        formAction: true,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Next\")), React.createElement(\"div\", {\n        className: \"info_auth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Already a VIEBEG member?\"), React.createElement(Link, {\n        to: \"/auth/sign-in\",\n        onClick: resetErrorUsers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"SIGN IN\")));\n    }\n  }]);\n\n  return SignUp;\n}(Component);\n\nvar validate = function validate(values) {\n  var errors = {};\n\n  if (!values.company) {\n    errors.company = 'Required';\n  } else if (values.company.length < 3) {\n    errors.company = 'Must be 3 characters or more';\n  }\n\n  if (!values.clinic_email) {\n    errors.clinic_email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,5}$/i.test(values.clinic_email)) {\n    errors.clinic_email = 'Invalid email';\n  }\n\n  if (!values.password) {\n    errors.password = 'Required';\n  } else if (values.password.length < 8) {\n    errors.password = 'Must be 8 characters or more';\n  }\n\n  if (!values.phone) {\n    errors.phone = 'Required';\n  }\n\n  if (!values.address) {\n    errors.address = 'Required';\n  }\n\n  return errors;\n};\n\nSignUp = reduxForm({\n  form: 'SignUp',\n  validate: validate\n})(SignUp);\n\nfunction mapStateToProps(state, props) {\n  return {\n    step_fail: state.auth.error\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    postRegisterFirstStep: postRegisterFirstStep,\n    resetErrorUsers: resetErrorUsers\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/mydev/viebeg/backend/viebeg_backend2/4Com-viebeg-frontend-2089674220ab-2/src/components/Auth/Register/SignUp.jsx"],"names":["React","Component","Field","reduxForm","connect","ReCAPTCHA","bindActionCreators","RenderField","DefaultButton","Link","postRegisterFirstStep","resetErrorUsers","SITE_KEY","recaptchaRef","createRef","SignUp","state","reCaptcha","loading","submitForm","data","props","history","setState","recaptcha","recaptchaKey","then","res","payload","status","localStorage","setItem","JSON","stringify","push","current","reset","onChange","key","handleSubmit","submitting","pristine","valid","step_fail","console","log","clinic_email","clinic_name","validate","values","errors","company","length","test","password","phone","address","form","mapStateToProps","auth","error","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport {connect} from 'react-redux';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { bindActionCreators } from 'redux';\nimport RenderField from \"../../HelperComponents/RenderField/RenderField\";\nimport DefaultButton from '../../Buttons/DefaultButton/DefaultButton';\nimport { Link } from 'react-router-dom';\nimport { postRegisterFirstStep } from '../../../actions/authActions';\nimport { resetErrorUsers } from '../../../actions/UserActions';\n// import recaptcha from \"react-google-recaptcha/src/recaptcha\";\n\n\n\n\nconst SITE_KEY = \"6LfWmNQUAAAAAHjBqN29AftN2ntLZ5858Yi6M085\";\nconst recaptchaRef = React.createRef();\n\nclass SignUp extends Component {\n\n    state = {\n        reCaptcha: false,\n        loading: false,\n    };\n\n    componentDidMount() {\n            const {resetErrorUsers} = this.props;\n            // resetErrorUsers()\n    }\n\n    submitForm = (data) => {\n        // const recaptchaValue = recaptchaRef.current.getValue();\n        const { postRegisterFirstStep, history, resetErrorUsers } = this.props;\n        this.setState({loading: true});\n\n        data.recaptcha = this.state.recaptchaKey;\n\n        postRegisterFirstStep(data).then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 200) {\n                localStorage.setItem( 'clinic_info', JSON.stringify(data));\n                history.push(`/auth/sign-up/second-step`);\n                resetErrorUsers()\n            }else{\n                this.setState({loading: false,  reCaptcha: false});\n                recaptchaRef.current.reset();\n            }\n        })\n    };\n\n    onChange= (key) =>{\n        this.setState({\n            reCaptcha: true,\n            recaptchaKey: key\n        })\n    };\n\n\n    render(){\n        const {handleSubmit, submitting, pristine, valid, step_fail, resetErrorUsers } = this.props;\n        const { reCaptcha, loading } = this.state;\n        console.log(step_fail)\n        return (\n\n            <form onSubmit={handleSubmit(this.submitForm)}>\n                <h3 className=\"auth-block_head\">Sign up to VIEBEG</h3>\n                <h3 className=\"auth-block_descriptions\">Please, fill out the form about your business below</h3>\n                <div className=\"block_field\">\n                    <span>Email</span>\n                    <Field name=\"clinic_email\" type=\"text\" component={RenderField} placeholder=\"Type here…\"/>\n                    <span className='back_error'>{!!step_fail && step_fail.clinic_email}</span>\n                </div>\n                <div className=\"block_custom_field\">\n                    <div className=\"block_field\">\n                        <span>Hospital name</span>\n                        <Field name=\"clinic_name\" type=\"text\" component={RenderField} placeholder=\"Type here…\"/>\n                        <span className='back_error'>{!!step_fail && step_fail.clinic_name}</span>\n                    </div>\n                   <div className=\"captcha_block\">\n                       <ReCAPTCHA\n                           theme=\"light\"\n                           ref={recaptchaRef}\n                           sitekey={SITE_KEY}\n                           onChange={this.onChange}\n                       />\n                       <span className='back_error'>{!!step_fail && step_fail.recaptcha}</span>\n                   </div>\n                </div>\n                <div className=\"auth_btn_wrapper\">\n                    <DefaultButton\n                        variant=\"contained\"\n                        disabled={reCaptcha ? submitting || pristine || !valid : true}\n                        loading={loading}\n                        formAction\n                        type=\"submit\"\n                    >\n                        Next\n                    </DefaultButton>\n                </div>\n                <div className=\"info_auth\">\n                    <span>Already a VIEBEG member?</span>\n                    <Link to={`/auth/sign-in`} onClick={resetErrorUsers}>\n                        SIGN IN\n                    </Link>\n                </div>\n            </form>\n        );\n    }\n}\n\nconst validate = values => {\n    const errors = {};\n    if (!values.company) {\n        errors.company = 'Required'\n    } else if (values.company.length < 3) {\n        errors.company = 'Must be 3 characters or more'\n    }\n    if (!values.clinic_email) {\n        errors.clinic_email = 'Required'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,5}$/i.test(values.clinic_email)) {\n        errors.clinic_email = 'Invalid email'\n    }\n    if (!values.password) {\n        errors.password = 'Required'\n    } else if (values.password.length < 8) {\n        errors.password = 'Must be 8 characters or more'\n    }\n    if (!values.phone) {\n        errors.phone = 'Required'\n    }\n    if (!values.address) {\n        errors.address = 'Required'\n    }\n    return errors\n};\n\nSignUp = reduxForm({\n    form: 'SignUp',\n    validate\n})(SignUp);\n\nfunction  mapStateToProps(state, props) {\n    return{\n        step_fail: state.auth.error,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        postRegisterFirstStep,\n        resetErrorUsers\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}